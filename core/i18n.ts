import { notFound } from 'next/navigation';
import { getRequestConfig } from 'next-intl/server';

enum LocalePrefixes {
  ALWAYS = 'always',
  NEVER = 'never',
  ASNEEDED = 'as-needed', // removes prefix on default locale
}

// Enable locales by including them here
// List includes locales with existing messages support
const locales = [
  'en',
  // 'da',
  // 'es-419',
  // 'es-AR',
  // 'es-CL',
  // 'es-CO',
  // 'es-LA',
  // 'es-MX',
  // 'es-PE',
  // 'es',
  // 'it',
  // 'nl',
  // 'pl',
  // 'pt',
  // 'de',
  // 'fr',
  // 'ja',
  // 'no',
  // 'pt-BR',
  // 'sv',
] as const;

type LocaleLanguageRegionMap = {
  [key in LocaleType]: { language: string; region: string; flag: string };
};

/**
 * Custom map of locale to language and region
 * Temporary solution until we have a better way to include regions for all locales
 */
export const localeLanguageRegionMap: LocaleLanguageRegionMap = {
  en: { language: 'English', region: 'United States', flag: 'ðŸ‡ºðŸ‡¸' },
  // da: { language: 'Dansk', region: 'Danmark', flag: 'ðŸ‡©ðŸ‡°' }
  // 'es-419': { language: 'EspaÃ±ol', region: 'America Latina', flag: '' },
  // 'es-AR': { language: 'EspaÃ±ol', region: 'Argentina', flag: 'ðŸ‡¦ðŸ‡·' },
  // 'es-CL': { language: 'EspaÃ±ol', region: 'Chile', flag: 'ðŸ‡¨ðŸ‡±' },
  // 'es-CO': { language: 'EspaÃ±ol', region: 'Colombia', flag: 'ðŸ‡¨ðŸ‡´' },
  // 'es-LA': { language: 'EspaÃ±ol', region: 'America Latina', flag: '' },
  // 'es-MX': { language: 'EspaÃ±ol', region: 'MÃ©xico', flag: 'ðŸ‡²ðŸ‡½' },
  // 'es-PE': { language: 'EspaÃ±ol', region: 'PerÃº', flag: 'ðŸ‡µðŸ‡ª' },
  // es: { language: 'EspaÃ±ol', region: 'EspaÃ±a', flag: 'ðŸ‡ªðŸ‡¸' },
  // it: { language: 'Italiano', region: 'Italia', flag: 'ðŸ‡®ðŸ‡¹' },
  // nl: { language: 'Nederlands', region: 'Nederland', flag: 'ðŸ‡³ðŸ‡±' },
  // pl: { language: 'Polski', region: 'Polska', flag: 'ðŸ‡µðŸ‡±' },
  // pt: { language: 'PortuguÃªs', region: 'Portugal', flag: 'ðŸ‡µðŸ‡¹' },
  // de: { language: 'Deutsch', region: 'Deutschland', flag: 'ðŸ‡©ðŸ‡ª' },
  // fr: { language: 'FranÃ§ais', region: 'France', flag: 'ðŸ‡«ðŸ‡·' },
  // ja: { language: 'æ—¥æœ¬èªž', region: 'æ—¥æœ¬', flag: 'ðŸ‡¯ðŸ‡µ' },
  // no: { language: 'Norsk', region: 'Norge', flag: 'ðŸ‡³ðŸ‡´' },
  // 'pt-BR': { language: 'PortuguÃªs', region: 'Brasil', flag: 'ðŸ‡§ðŸ‡·' },
  // sv: { language: 'Svenska', region: 'Sverige', flag: 'ðŸ‡¸ðŸ‡ª' },
};

type LocalePrefixesType = `${LocalePrefixes}`;

// Temporary we use NEVER prefix to prioritize accept-language header
// & disable internationalized routes due to incomplete multilingual implementation
const localePrefix: LocalePrefixesType = LocalePrefixes.NEVER;
const defaultLocale = 'en';

type LocaleType = (typeof locales)[number];

export default getRequestConfig(async (params) => {
  let lang = params.locale as LocaleType; // eslint-disable-line

  if (!locales.includes(lang)) notFound();

  return {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    messages: await import(`./messages/${lang}`),
  };
});

export { LocalePrefixes, locales, localePrefix, defaultLocale };
export type { LocaleType };
