name: Lighthouse Report

on:
  deployment_status

jobs:
  generate_lighthouse_audit:
    name: Deployment Audit

    timeout-minutes: 30

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - uses: pnpm/action-setup@v2

      - name: Requires audit
        env:
          DEPLOY_URL: ${{ github.event.deployment_status.target_url }}
        run: |
          echo ${{ github.event.deployment_status.target_url }}
          if [[ $DEPLOY_URL =~ "makeswift" ]]; then
            echo "No audit required."
            export audit_required=false >> $GITHUB_ENV
          elif [[ $DEPLOY_URL =~ "storybook" ]]; then
            echo "No audit required."
            export audit_required=false >> $GITHUB_ENV
          else
            echo "Audit required."
            export audit_required=true >> $GITHUB_ENV
          fi

      - name: Audit preview URL with Lighthouse
        if: fromJSON(env.audit_required)
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ github.event.deployment_status.target_url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3

      - name: Format lighthouse score
        if: fromJSON(env.audit_required)
        id: format_lighthouse_score
        uses: actions/github-script@v5
        with:
          script: |
            const lighthouseCommentMaker = require('./.github/workflows/lighthouseCommentMaker.js');

            const lighthouseOutputs = {
              manifest: ${{ steps.lighthouse_audit.outputs.manifest }},
              links: ${{ steps.lighthouse_audit.outputs.links }}
            };

            const comment = lighthouseCommentMaker({ lighthouseOutputs });
            core.setOutput("comment", comment);

      - name: Find pull request
        if: fromJSON(env.audit_required)
        uses: jwalton/gh-find-current-pr@v1
        id: finder

      - name: Add comment to PR
        if: fromJSON(env.audit_required)
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.finder.outputs.pr }}
          header: lighthouse
          message: ${{ steps.format_lighthouse_score.outputs.comment }}
